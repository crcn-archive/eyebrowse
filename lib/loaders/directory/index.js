// Generated by CoffeeScript 1.6.2
(function() {
  var DirectoryLoader, drivers, fs, path,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  fs = require("fs");

  path = require("path");

  drivers = require("./drivers");

  DirectoryLoader = (function(_super) {
    __extends(DirectoryLoader, _super);

    /*
    */


    function DirectoryLoader(directory) {
      this._applications = {};
      this.directory = directory.replace("~", process.env.HOME);
    }

    /*
    */


    DirectoryLoader.prototype.loadApplications = function(callback) {
      var appName, _i, _len, _ref;

      this._registerGlobal();
      _ref = fs.readdirSync(this.directory);
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        appName = _ref[_i];
        this._applications[appName] = require(path.join(this.directory, appName));
      }
      this._unregisterGlobal();
      return callback();
    };

    /*
    */


    DirectoryLoader.prototype.start = function(options, callback) {
      var app;

      return app = this._applications[options.name];
    };

    /*
    */


    DirectoryLoader.prototype._registerGlobal = function() {
      var name, _results;

      _results = [];
      for (name in drivers) {
        _results.push(global[name] = drivers[name]);
      }
      return _results;
    };

    /*
    */


    DirectoryLoader.prototype._unregisterGlobal = function() {
      var name, _results;

      _results = [];
      for (name in drivers) {
        _results.push(delete global[name]);
      }
      return _results;
    };

    return DirectoryLoader;

  })(require("../base"));

  module.exports = DirectoryLoader;

}).call(this);
