// Generated by CoffeeScript 1.6.2
(function() {
  var AppLoader, DirectoryLoader, async, fs, outcome, path, utils, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _ = require("underscore");

  fs = require("fs");

  path = require("path");

  async = require("async");

  utils = require("../../../utils");

  AppLoader = require("./appLoader");

  outcome = require("outcome");

  DirectoryLoader = (function(_super) {
    __extends(DirectoryLoader, _super);

    /*
    */


    function DirectoryLoader(directory) {
      this._applications = {};
      this.directory = directory.replace("~", process.env.HOME);
    }

    /*
    */


    DirectoryLoader.prototype.loadApplications = function(callback) {
      var appName, apps, dir, options, _i, _len, _ref;

      apps = [];
      _ref = fs.readdirSync(this.directory);
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        appName = _ref[_i];
        if (appName === ".DS_Store") {
          continue;
        }
        dir = path.join(this.directory, appName);
        options = require(dir);
        apps.push(new AppLoader(_.extend({
          directory: dir,
          name: appName
        }, options)));
      }
      return async.map(apps, (function(app, next) {
        return app.load(next);
      }), callback);
    };

    return DirectoryLoader;

  })(require("../base"));

  module.exports = DirectoryLoader;

}).call(this);
